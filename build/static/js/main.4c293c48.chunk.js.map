{"version":3,"sources":["components/Ａｂｏｕｔ/About.js","components/Ｎｏ　Ｑｕｏｔｅ/NoQuote.js","components/Ｑｕｏｔｅ/Quote.js","components/Ｃｏｄｅ/Code.js","components/Ｎｕｍｂｅｒ/Number typing.js","components/Ｗｅｂ Ｓｃｒａｐｅ/Head.js","components/Ｗｅｂ Ｓｃｒａｐｅ/Body.js","components/Ｗｅｂ Ｓｃｒａｐｅ/WebScrape.js","components/Home/Home.js","components/Header/Header.js","components/Footer/Footer.js","components/Setting/Setting.js","App.js","reportWebVitals.js","index.js"],"names":["About","paused","previousTimeUsed","totalWords","currentWords","restartTime","lastInputTime","timerTimeout","longestTimeForInput","setting","test","NoQuote","props","console","log","useState","displayWPM","setDisplayWPM","displayWords","setDisplayWords","settings","timer","Date","now","pauseFunction","setTimeout","totalTimeUsed","Math","round","clearTimeout","wpm","setSettings","useEffect","id","style","height","className","paddingBottom","lg","xs","onInput","e","preventDefault","newText","target","value","length","matchArray","match","newTotalWords","timeUsedForInput","onBlur","Quote","Code","NumberTyping_displaySampleText","SampleTextArray","generatedNumber","decidedDigits","document","getElementById","focus","i","randomDicimalToDecideDigits","random","floor","innerHTML","genAndDisplayNumWhenInitialize","from1toInfinity","body","addEventListener","pressedKey","keyCode","randomDicimalToDecideDigits2","toString","push","temp","scroll","pressEnterGenAndAddOneNumber","putNumOnSampleText","split","slice","historyValue","textArea","querySelector","HighLightElementRow","HighLightElementColumn","WrongNumber","Started","Ended","HightLightColor","red","green","black","missedGrey","insert","j","Error","textContent","whiteSpace","children","color","fontSize","backgroundColor","removeChild","currentValue","startPosition","historyValueArray","currentValueArray","nonChangeRowNumber","CorrectNumber","deleteHistoryValue","newChild","createElement","appendChild","addCurrentValue","innerText","newElement","position","Head","textArray","setTextArray","urlInputId","domainNameSelectOptions","paragraphArrayQuerySelectors","enterButtonOnclick","input","fetch","then","res","text","responseText","domainNameSelect","bodyText","bodyElement","paragraphArray","querySelectorAll","newTextArray","Array","replace","catch","Row","Col","width","map","domainName","placeholder","onKeyDown","key","cursor","onClick","sampleText","wrongWordAmount","correctWordAmount","currentIntervalStartTime","initialized","readied","started","currentTimeOut","wpmTimeOutMilliseconds","colors","origin","correct","wrong","Body","setTextColor","sampleTextContainerInitialElements","ready","start","newCurrentIntervalStartTime","loop","currentTime","currentIntervalTimeUsed","pause","newWPMTimeOutMilliseconds","remainder","moveWebScrapeSampleTextIndicator","webScrapeTextIndicator","webScrapeTextArea","spanElements","nextInputTextElement","offsetHeight","offsetWidth","top","offsetTop","left","offsetLeft","classList","add","remove","isArray","textSpanElements","newTextColor","fill","ReactDOM","render","warningText","textAlign","window","zIndex","firstDifferentPosition","changeColor","startDeletePosition","currentDeleteWordCorrect","deletingWord","startAddPosition","currentAddWordCorrect","addingWord","borderRadius","WebScrape","Home","collapsed","mobileLayout","Header","originColor","setOriginColor","displayMobileLayout","setDisplayMobileLayout","changeScrollBarColorByScroll","showSetting","setShowSetting","currentTab","setCurrentTab","setSetting","changeHeaderBackgroundWithoutUsingHambergar","scrollY","closeHeader","contains","click","changeTab","n","innerWidth","Navbar","fixed","collapseOnSelect","expand","padding","Nav","margin","marginBottom","paddingTop","Brand","Toggle","aria-controls","Tabs","display","classes","indicator","onChange","variant","scrollButtons","string","Tab","textTransform","root","wrapper","label","Collapse","orientation","Footer","marginTop","originSetting","Setting","currentSettingTab","setCurrentSettingTab","settingNames","setSettingOnClick","parent","parentElement","settingName","getAttribute","propertyName","newSetting","JSON","parse","stringify","newValue","childNodes","storedSetting","localStorage","getItem","setItem","a","currentSetting","Promise","all","array","forEach","obj","newStoredSetting","property","Object","keys","includes","undefined","entries","settingEntry","settingObj","tableBody","propertyEntry","propertyname","tableRow","settingname","App","components","scrollHeight","documentElement","clientHeight","M","init","element","React","cloneElement","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.4c293c48.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n\r\n            <h1>About Us</h1>\r\n            <div>The most versatile typing website you'll ever see.\r\n                <br/>Here, you can train your typing skills in all areas including:\r\n                <br/>• English typing\r\n                <br/>• Number typing\r\n                <br/>• Code typing\r\n                <br/>• WebScrap typing (insert a link which contains text e.g. News)\r\n                <br/>• No Quote typing (type what you want!)\r\n\r\n                \r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React, { useState, useEffect } from 'react';\r\nimport './NoQuote.css';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n// params\r\nconst timingInterval = 500;\r\nconst autoPauseTime = 1500;\r\n\r\n// variables\r\nlet paused;\r\nlet previousTimeUsed;\r\nlet totalWords;\r\nlet currentWords;\r\nlet restartTime;\r\nlet lastInputTime;\r\nlet timerTimeout;\r\n\r\n// test\r\nlet longestTimeForInput = 0\r\n\r\nlet setting = {\r\n    test: \"1\"\r\n}\r\n\r\nexport {setting}\r\n\r\n\r\nfunction NoQuote(props) {\r\n    console.log('noQuote rendered')\r\n    const [displayWPM, setDisplayWPM] = useState('- -');\r\n    const [displayWords, setDisplayWords] = useState('- -');\r\n    const { settings, setSettings } = props;\r\n\r\n    let test = settings['noQuoteSetting']['test']\r\n\r\n    useEffect(() => {\r\n        console.log('noQuoote used effect')\r\n        paused = true;\r\n        previousTimeUsed = 0;\r\n        totalWords = 0;\r\n        currentWords = 0;\r\n        restartTime = 0;\r\n        lastInputTime = 0;\r\n        timerTimeout = null;\r\n    }, [])\r\n\r\n    function onInput(e) {\r\n        e.preventDefault();\r\n        lastInputTime = Date.now();\r\n        let newText = e.target.value ? e.target.value : \"\";\r\n\r\n        if (newText.length === 0) {\r\n            totalWords += currentWords;\r\n            currentWords = 0;\r\n        } else {\r\n            let matchArray = newText.match(/[\\w'][^\\w']/g)\r\n            let newTotalWords = matchArray ? matchArray.length : 0;\r\n\r\n            currentWords = newTotalWords;\r\n        }\r\n        setDisplayWords(totalWords + currentWords)\r\n\r\n        if (paused) {\r\n            paused = false;\r\n            restartTime = lastInputTime;\r\n            timer();\r\n        }\r\n\r\n        let timeUsedForInput = Date.now() - lastInputTime;\r\n        if (timeUsedForInput > longestTimeForInput) {\r\n            longestTimeForInput = timeUsedForInput\r\n            console.log('time used for on input in no quote: ', timeUsedForInput)\r\n        }\r\n    }\r\n\r\n    function timer() {\r\n        if (Date.now() - lastInputTime >= autoPauseTime) {\r\n            pauseFunction()\r\n        } else {\r\n            timerTimeout = setTimeout(timer, timingInterval);\r\n            let totalTimeUsed = previousTimeUsed + Date.now() - restartTime;\r\n            if (totalTimeUsed > 0) {\r\n                setDisplayWPM(Math.round((totalWords + currentWords) / totalTimeUsed * 600000) / 10)\r\n            }\r\n        }\r\n    }\r\n\r\n    function pauseFunction() {\r\n        previousTimeUsed += lastInputTime - restartTime;\r\n        paused = true;\r\n        clearTimeout(timerTimeout);\r\n        let wpm = previousTimeUsed > 0 ? Math.round((totalWords + currentWords) / previousTimeUsed * 600000) / 10 : '- -';\r\n        setDisplayWPM(wpm);\r\n        lastInputTime = 0;\r\n        restartTime = 0;\r\n        timerTimeout = null;\r\n    }\r\n\r\n    return (\r\n        <div id=\"noQuote\" style={{ height: \"calc(100vh - 70px\" }}>\r\n            <div className=\"d-flex flex-column\" id=\"noQuoteTopPortion\" style={{ height: \"100%\", paddingBottom: \"10px\" }}>\r\n                <Row className=\"justify-content-center text-center\">\r\n                    <Col></Col>\r\n                    <Col lg={6}>\r\n                        <Row>\r\n                            <Col xs={6}>\r\n                                <h6 className=\"th\">WPM</h6>\r\n                                <h5>{displayWPM}</h5>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <h6 className=\"th\">Words</h6>\r\n                                <h5>{displayWords}</h5>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n                <textarea onInput={onInput} onBlur={pauseFunction}></textarea>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NoQuote;","function Quote() {\r\n    return(<h1>Quote</h1>)\r\n}\r\n\r\nexport default Quote","function Code() {\r\n    return(<h1>Code</h1>)\r\n}\r\n\r\nexport default Code","import React, { useEffect } from 'react';\r\nimport './Number typing.css'\r\n\r\n\r\nfunction NumberTyping_displaySampleText() {\r\n\tvar SampleTextArray = []\r\n\r\n\t//function 1\r\n\r\n///jasddkfjfgaskfgfkuasgdfuyagsuydfgausdjgasdhjfguaysdgyaegrufyaudgaasfdsdgadkguhasudfuasdf\r\n\r\n\r\n\t//functions after return \r\n\tuseEffect(() => {\r\n\t\tvar generatedNumber\r\n\t\tvar decidedDigits;\r\n\t\t//clean up the div_displayGeneratedNumber\r\n\t\t//document.getElementById(\"div_displayGeneratedNumber\").innerText = \"\";\r\n\r\n\r\n\t\t//useEffect function 0: AutoFocus\r\n\t\t\r\n\t\t\tdocument.getElementById(\"numTextArea\").focus();\r\n\t\t  \r\n\r\n\t\t//useEffect function 1: gen 15 num\r\n\t\tfunction genAndDisplayNumWhenInitialize() {\r\n\t\t\t//gen 10 numbers\r\n\t\t\tfor (var i = 0; i < 6; i++) {\r\n\t\t\t\tvar randomDicimalToDecideDigits = Math.random();\r\n\t\t\t\tif (randomDicimalToDecideDigits < 0.1) { decidedDigits = 100 }\r\n\t\t\t\telse if (randomDicimalToDecideDigits >= 0.1 && randomDicimalToDecideDigits < 0.2) { decidedDigits = 1000 }\r\n\t\t\t\telse if (randomDicimalToDecideDigits >= 0.2 && randomDicimalToDecideDigits < 0.5) { decidedDigits = 10000 }\r\n\t\t\t\telse if (randomDicimalToDecideDigits >= 0.5 && randomDicimalToDecideDigits < 0.8) { decidedDigits = 100000 }\r\n\t\t\t\telse { decidedDigits = 1000000 }\r\n\r\n\t\t\t\t//gen 10 numbers: the gened number\r\n\t\t\t\tgeneratedNumber = Math.floor(Math.random() * decidedDigits);\r\n\t\t\t\t//gen 10 numbers: print the number (each number add new number & linebreak)\r\n\t\t\t\tdocument.getElementById(\"div_displayGeneratedNumber\").innerHTML += generatedNumber + \"<br>\";\r\n\t\t\t}\r\n\t\t\t//document.getElementById(\"div_displayGeneratedNumber\").innerHTML += \"ma zi yeung\";\r\n\t\t}\r\n\t\tgenAndDisplayNumWhenInitialize();\r\n\r\n\t\t//useEffect function 2: press enter\r\n\t\tfunction pressEnterGenAndAddOneNumber() {\r\n\t\t\tvar from1toInfinity = 0;\r\n\t\t\tdocument.body.addEventListener(\"keydown\", function (pressedKey) {\r\n\t\t\t\t\r\n\t\t\t\tif (pressedKey.keyCode === 13) {\r\n\t\t\t\t\tvar randomDicimalToDecideDigits2 = Math.random();\r\n\t\t\t\t\t\r\n\t\t\t\t\t//document.getElementById(\"div_displayGeneratedNumber\").innerHTML = \"abc\"\r\n\t\t\t\t\t//gen a single number\r\n\t\t\t\t\tif (randomDicimalToDecideDigits2 < 0.1) { decidedDigits = 100 }\r\n\t\t\t\t\telse if (randomDicimalToDecideDigits2 >= 0.1 && randomDicimalToDecideDigits2 < 0.2) { decidedDigits = 1000 }\r\n\t\t\t\t\telse if (randomDicimalToDecideDigits2 >= 0.2 && randomDicimalToDecideDigits2 < 0.5) { decidedDigits = 10000 }\r\n\t\t\t\t\telse if (randomDicimalToDecideDigits2 >= 0.5 && randomDicimalToDecideDigits2 < 0.8) { decidedDigits = 100000 }\r\n\t\t\t\t\telse { decidedDigits = 1000000 };\r\n\t\t\t\t\tgeneratedNumber = Math.floor(Math.random() * decidedDigits).toString();\r\n\t\t\t\t\t//gen a single number: print & add the new gened number\r\n\t\t\t\t\tSampleTextArray.push(generatedNumber)\r\n\t\t\t\t\tconsole.log(SampleTextArray)\r\n\t\t\t\t\tlet temp = \"\";\r\n\t\t\t\t\tfor (let i = 0; i < generatedNumber.length; i++) {\r\n\t\t\t\t\t\ttemp += \"<span>\" + generatedNumber[i] + '</span>'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdocument.getElementById(\"div_displayGeneratedNumber\").innerHTML += \"<span>\" + temp + \"</span><br>\";\r\n\r\n\t\t\t\t\t//press enter will scroll TO 70.5 * fromItoInfiinity\r\n\t\t\t\t\tfunction scroll (){\r\n\t\t\t\t\t\tfrom1toInfinity = from1toInfinity + 1;\r\n\t\t\t\t\t\tdocument.getElementById(\"div_displayGeneratedNumber\").scroll(0, from1toInfinity * 70.5);\r\n\t\t\t\t\t\tconsole.log(from1toInfinity);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tscroll();\r\n\t\t\t\t}\r\n\r\n\t\t\t})\r\n\t\t}\r\n\t\tpressEnterGenAndAddOneNumber();\r\n\r\n\r\n\t\t//useEffect function 3\r\n\t\t(() => {\r\n\t\t\tvar putNumOnSampleText = document.getElementById(\"div_displayGeneratedNumber\");\r\n\t\t\tSampleTextArray = putNumOnSampleText.innerHTML.split(\"<br>\");\r\n\t\t\tSampleTextArray = SampleTextArray.slice(0, SampleTextArray.length - 1)\r\n\t\t\tvar textArea = document.querySelector(\"#numTextArea\");\r\n\t\t\t//var Wpm = document.querySelectorAll(\"#wpm\")[1];\r\n\t\t\t//var Error = document.querySelectorAll(\"#errors\")[1];\r\n\t\t\tvar HighLightElementRow = 0;\r\n\t\t\tvar HighLightElementColumn = 0;\r\n\t\t\tvar CorrectNumber = 0;\r\n\t\t\tvar WrongNumber = 0;\r\n\t\t\tvar Started = false;\r\n\t\t\tvar Ended = false;\r\n\t\t\tvar StartTime;\r\n\t\t\tvar TimeInterval;\r\n\t\t\tvar HightLightColor = \"grey\";\r\n\t\t\tvar red = \"#ff0000\";\r\n\t\t\tvar green = \"#00bf44\";\r\n\t\t\tvar black = \"#000000\";\r\n\t\t\tvar missedGrey = \"black\";\r\n\t\t\tvar historyValue;\r\n\r\n\t\t\tvar insert = \"\"\r\n\t\t\tfor (var i = 0; i < SampleTextArray.length; i++) {\r\n\t\t\t\tif (SampleTextArray[i].length > 0) {\r\n\t\t\t\t\t\tinsert += \"<span>\";\r\n\t\t\t\t\t\tfor (var j = 0; j < SampleTextArray[i].length; j++) {\r\n\t\t\t\t\t\t\tinsert += \"<span>\" + SampleTextArray[i][j] + \"</span>\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tinsert += \"</span><br>\";\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tError.textContent = \"123\";\r\n\t\t\tputNumOnSampleText.innerHTML = insert;\r\n\t\t\tputNumOnSampleText.style.whiteSpace = \"pre-wrap\";\r\n\t\t\tputNumOnSampleText.children[HighLightElementRow * 2].children[HighLightElementColumn].style.color = HightLightColor;\r\n\t\t\t///test\r\n\t\t\tputNumOnSampleText.children[HighLightElementRow * 2].children[HighLightElementColumn].style.fontSize = \"60px\";\r\n\t\t\t//\r\n\t\t\ttextArea.value = \"\";\r\n\t\t\thistoryValue = \"\";\r\n\t\t\t//scroll(0);\r\n\r\n\t\t\ttextArea.addEventListener(\"input\", (e) => {\r\n\t\t\t\tif (!Ended) {\r\n\t\t\t\t\tif (!Started) {\r\n\t\t\t\t\t\tStarted = true;\r\n\t\t\t\t\t\tStartTime = Date.now();\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (SampleTextArray[HighLightElementRow] && SampleTextArray[HighLightElementRow][HighLightElementColumn]) {\r\n\t\t\t\t\t\tputNumOnSampleText.children[HighLightElementRow * 2].children[HighLightElementColumn].style.backgroundColor = \"\";\r\n\t\t\t\t\t\tputNumOnSampleText.children[HighLightElementRow * 2].children[HighLightElementColumn].style.fontSize = \"49px\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tputNumOnSampleText.children[HighLightElementRow * 2].removeChild(putNumOnSampleText.children[HighLightElementRow * 2].children[HighLightElementColumn]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar currentValue = textArea.value;\r\n\t\t\t\t\tvar startPosition = 0;\r\n\t\t\t\t\tfor (i = 0; i < historyValue.length && currentValue.length; i++) {\r\n\t\t\t\t\t\tif (historyValue[i] != currentValue[i]) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tstartPosition++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar historyValueArray = historyValue.split(/\\r?\\n|\\r/g);\r\n\t\t\t\t\tvar currentValueArray = currentValue.split(/\\r?\\n|\\r/g);\r\n\t\t\t\t\tvar nonChangeRowNumber = currentValue.slice(0, startPosition).split(/\\r?\\n|\\r/g).length - 2;\r\n\t\t\t\t\tdeleteHistoryValue(nonChangeRowNumber, historyValueArray);\r\n\t\t\t\t\taddCurrentValue(nonChangeRowNumber, currentValueArray);\r\n\r\n\t\t\t\t\tif (currentValueArray.length > SampleTextArray.length) {\r\n\t\t\t\t\t\tEnded = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tError.innerText = WrongNumber;\r\n\t\t\t\t\tif (Ended) {\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tHighLightElementRow = currentValueArray.length - 1;\r\n\t\t\t\t\t\tHighLightElementColumn = currentValueArray ? currentValueArray[currentValueArray.length - 1] ? currentValueArray[currentValueArray.length - 1].length : 0 : 0;\r\n\t\t\t\t\t\tif (putNumOnSampleText.children[HighLightElementRow * 2] && putNumOnSampleText.children[HighLightElementRow * 2].children[HighLightElementColumn]) {\r\n\t\t\t\t\t\t\tputNumOnSampleText.children[HighLightElementRow * 2].children[HighLightElementColumn].style.color = HightLightColor;\r\n\t\t\t\t\t\t\tputNumOnSampleText.children[HighLightElementRow * 2].children[HighLightElementColumn].style.fontSize = \"60px\";\r\n\t\t\t\t\t\t\tif (!SampleTextArray[HighLightElementRow] || !SampleTextArray[HighLightElementRow][HighLightElementColumn]) {\r\n\t\t\t\t\t\t\t\tputNumOnSampleText.children[HighLightElementRow * 2].children[HighLightElementColumn].innerText = \" \";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvar newElement = document.createElement(\"span\");\r\n\t\t\t\t\t\t\tnewElement.style.color = HightLightColor;\r\n\t\t\t\t\t\t\tnewElement.style.fontSize = \"60px\";\r\n\t\t\t\t\t\t\tnewElement.innerText = \" \";\r\n\t\t\t\t\t\t\tputNumOnSampleText.children[HighLightElementRow * 2].appendChild(newElement);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//scroll(HighLightElementRow);\r\n\t\t\t\t\t}\r\n\t\t\t\t\thistoryValue = currentValue;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tfunction deleteHistoryValue(nonChangeRowNumber, historyValueArray) {\r\n\t\t\t\tfor (i = historyValueArray.length - 1; i > nonChangeRowNumber; i--) {\r\n\t\t\t\t\tif (SampleTextArray[i]) {\r\n\t\t\t\t\t\tif (i < historyValueArray.length - 1) {\r\n\t\t\t\t\t\t\tfor (j = SampleTextArray[i].length - 1; j >= historyValueArray.length; j--) {\r\n\t\t\t\t\t\t\t\tputNumOnSampleText.children[i * 2].children[j].style.color = black;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\tfor (j = historyValueArray[i].length - 1; j >= 0; j--) {\r\n\t\t\t\t\t\t\tif (SampleTextArray[i][j]) {\r\n\t\t\t\t\t\t\t\tif (historyValueArray[i][j] == SampleTextArray[i][j]) {\r\n\t\t\t\t\t\t\t\t\tCorrectNumber--;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tWrongNumber--;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tputNumOnSampleText.children[i * 2].children[j].style.color = black;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tWrongNumber--;\r\n\t\t\t\t\t\t\t\tputNumOnSampleText.children[i * 2].removeChild(putNumOnSampleText.children[i * 2].children[j]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tWrongNumber -= historyValueArray[i].length;\r\n\t\t\t\t\t\tputNumOnSampleText.removeChild(putNumOnSampleText.children[i * 2]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction addCurrentValue(nonChangeRowNumber, currentValueArray) {\r\n\t\t\t\tfor (i = nonChangeRowNumber + 1; i < currentValueArray.length; i++) {\r\n\t\t\t\t\tif (SampleTextArray[i]) {\r\n\t\t\t\t\t\tfor (j = 0; j < currentValueArray[i].length; j++) {\r\n\t\t\t\t\t\t\tif (SampleTextArray[i][j]) {\r\n\t\t\t\t\t\t\t\tif (currentValueArray[i][j] == SampleTextArray[i][j]) {\r\n\t\t\t\t\t\t\t\t\tCorrectNumber++;\r\n\t\t\t\t\t\t\t\t\tputNumOnSampleText.children[i * 2].children[j].style.color = green;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tWrongNumber++;\r\n\t\t\t\t\t\t\t\t\tputNumOnSampleText.children[i * 2].children[j].style.color = red;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tWrongNumber++;\r\n\t\t\t\t\t\t\t\tvar newChild = document.createElement(\"span\");\r\n\t\t\t\t\t\t\t\tnewChild.textContent = currentValueArray[i][j];\r\n\t\t\t\t\t\t\t\tnewChild.style.color = red;\r\n\t\t\t\t\t\t\t\tputNumOnSampleText.children[i * 2].appendChild(newChild);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (i < currentValueArray.length - 1) {\r\n\t\t\t\t\t\t\tfor (j = currentValueArray[i].length; j < SampleTextArray[i].length; j++) {\r\n\t\t\t\t\t\t\t\tputNumOnSampleText.children[i * 2].children[j].style.color = missedGrey;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tWrongNumber += currentValueArray[i].length;\r\n\t\t\t\t\t\tputNumOnSampleText.appendChild(document.createElement(\"span\"));\r\n\t\t\t\t\t\tputNumOnSampleText.appendChild(document.createElement(\"br\"));\r\n\t\t\t\t\t\tfor (j = 0; j < currentValueArray[i].length; j++) {\r\n\t\t\t\t\t\t\tvar newChild = document.createElement(\"span\");\r\n\t\t\t\t\t\t\tnewChild.textContent = currentValueArray[i][j];\r\n\t\t\t\t\t\t\tnewChild.style.color = red;\r\n\t\t\t\t\t\t\tputNumOnSampleText.children[i * 2].appendChild(newChild);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t\t\t// function scroll(elementRowNumber) {\r\n\t\t\t// \tvar textheight = putNumOnSampleText.children[1].offsetHeight;\r\n\r\n\t\t\t// \tif (textheight*elementRowNumber < (putNumOnSampleText.offsetHeight - textheight) / 2) {\r\n\t\t\t// \t\tputNumOnSampleText.scroll(0,0);\r\n\t\t\t// \t} else {\r\n\t\t\t// \t\tputNumOnSampleText.scroll(0,elementRowNumber*textheight - (putNumOnSampleText.offsetHeight - textheight) / 2);\r\n\t\t\t// \t}\r\n\t\t\t// }\r\n\t\t\t// function scroll(elementRowNumber) {\r\n\t\t\t// \tvar textheight = putNumOnSampleText.children[0].offsetHeight;\r\n\t\t\t// \tconsole.log('test height', textheight)\r\n\t\t\t// \tconsole.log(elementRowNumber)\r\n\t\t\t\t\r\n\t\t\t// \tif(textheight)\r\n\r\n\t\t\t// }\r\n\t\t})();\r\n\t\t\t\t// if (textheight * elementRowNumber < (putNumOnSampleText.offsetHeight - textheight) / 2) {\r\n\t\t\t\t// \tputNumOnSampleText.scroll(0, 0);\r\n\t\t\t\t// } else {\r\n\t\t\t\t// \tputNumOnSampleText.scroll(0, 100);\r\n\t\t\t\t// }\r\n//elementRowNumber * textheight - (putNumOnSampleText.offsetHeight - textheight) / 2\r\n\r\n\r\n\t})//useEffect end.\t\r\n\r\n\t///////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\t///////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\t//html (i.e. print on the Numer-typing page)\r\n\treturn (\r\n\t\t<div>\r\n\r\n\r\n\r\n\r\n\t\t\t<div style={{ position: \"relative\" }}>\r\n\t\t\t\t<div id=\"div_displayGeneratedNumber\"></div>\r\n\t\t\t</div>\r\n\t\t\t<textarea id=\"numTextArea\"></textarea>\r\n\r\n\r\n\r\n\r\n\r\n\t\t</div>\r\n\t) //return end. \t\r\n} //full script end.\r\n\r\nexport default NumberTyping_displaySampleText","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { ArrowReturnLeft } from 'react-bootstrap-icons';\r\n\r\nfunction Head(props) {\r\n    const { textArray, setTextArray } = props\r\n    const urlInputId = \"webScrapeURLInput\"\r\n    const domainNameSelectOptions = [\r\n        'edition.cnn.com'\r\n    ]\r\n\r\n    const paragraphArrayQuerySelectors = {\r\n        'edition.cnn.com': '.zn-body__paragraph'\r\n    }\r\n\r\n    function inputOnKeyDown(e) {\r\n        if (e.key === 'Enter') {\r\n            enterButtonOnclick()\r\n        }\r\n    }\r\n\r\n    function enterButtonOnclick() {\r\n        let input = document.querySelector(`#webScrape #${urlInputId}`)\r\n        fetch(input.value)\r\n            .then(res => res.text())\r\n            .then(responseText => {\r\n                let domainNameSelect = document.querySelector('#webScrapeDomainNameSelect')\r\n\r\n                // Select the body as string\r\n                let bodyText = responseText.match(/<body[\\s\\S]*<\\/body>/)[0]\r\n\r\n                // Make an element using the body Text as innerHTML\r\n                let bodyElement = document.createElement('div')\r\n                bodyElement.innerHTML = bodyText\r\n\r\n                // Find the array of target paragraphs\r\n                let paragraphArray = bodyElement.querySelectorAll(paragraphArrayQuerySelectors[domainNameSelect.value])\r\n\r\n                if (paragraphArray.length > 0) {\r\n                    // Able to find target paragraphs\r\n                    let newTextArray = new Array(paragraphArray.length)\r\n\r\n                    for (let i = 0; i < paragraphArray.length; i++) {\r\n                        newTextArray[i] = paragraphArray[i].innerText.replace(/^\\s*|\\s*$/g, \"\")\r\n                    }\r\n\r\n                    setTextArray(newTextArray)\r\n                } else {\r\n                    // Not able to find target paragraphs\r\n                    throw(new Error())\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                setTextArray('Failed to scrape web')\r\n            })\r\n    }\r\n\r\n    function makeDomainNameSelectOptionElements() {\r\n        return domainNameSelectOptions.map((domainName) => {\r\n            return <option>{domainName}</option>\r\n        })\r\n    }\r\n\r\n    return (<div>\r\n        <Row>\r\n            <Col xs={2}>\r\n                <select\r\n                    id=\"webScrapeDomainNameSelect\"\r\n                    style={{\r\n                        width: \"100%\"\r\n                    }}\r\n                >{makeDomainNameSelectOptionElements()}</select>\r\n            </Col>\r\n            <Col xs={9}>\r\n                <input\r\n                    id={urlInputId}\r\n                    placeholder=\"URL\"\r\n                    style={{\r\n                        width: \"100%\"\r\n                    }}\r\n                    onKeyDown={inputOnKeyDown}\r\n                ></input>\r\n            </Col>\r\n            <Col xs={1}>\r\n                <ArrowReturnLeft\r\n                    style={{\r\n                        cursor: \"pointer\"\r\n                    }}\r\n                    onClick={enterButtonOnclick}\r\n                ></ArrowReturnLeft>\r\n            </Col>\r\n        </Row>\r\n    </div>)\r\n}\r\n\r\nexport default Head","import { useEffect, useState } from 'react';\r\nimport './WebScrape.css'\r\nimport ReactDOM from 'react-dom';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n// Dates\r\nlet historyValue = \"\";\r\nlet sampleText = \"\";\r\nlet wrongWordAmount = 0\r\nlet correctWordAmount = 0\r\nlet previousTimeUsed = 0\r\nlet currentIntervalStartTime = 0;\r\nlet lastInputTime = null;\r\n\r\n// States\r\nlet initialized = false;\r\nlet readied = false;\r\nlet started = false;\r\nlet paused = true;\r\n\r\n// Equipments\r\nlet currentTimeOut = null;\r\n\r\n// Parameters\r\nlet wpmTimeOutStopMilliseconds = 1500 // How long does it takes for the time interval to stop automatically after no new input\r\nlet wpmTimeOutMilliseconds = 500 // How long does it takes for recalculate wpm by time interval\r\n\r\n// Colors for the sample text\r\nlet colors = {\r\n    origin: \"#000000\",\r\n    correct: \"#1fde5d\",\r\n    wrong: \"#ff0000\",\r\n}\r\n\r\n\r\nfunction Body(props) {\r\n    const { textArray, setTextArray } = props\r\n    const [textColor, setTextColor] = useState([]);\r\n    const [displayWPM, setDisplayWPM] = useState('- -');\r\n    const [displayWords, setDisplayWords] = useState('- -');\r\n\r\n    // Array of elements that originally contains in sample text container\r\n    const sampleTextContainerInitialElements = [\r\n        <div\r\n            id=\"webScrapTextCover\"\r\n            onClick={textContainerOnClick}\r\n        ></div>,\r\n        <div id=\"webScrapeSampleTextIndicator\"></div>\r\n    ]\r\n\r\n    // Initialize\r\n    useEffect(initialize, [textArray])\r\n\r\n    window.addEventListener('resize', () => {\r\n        moveWebScrapeSampleTextIndicator();\r\n    })\r\n\r\n    function initialize() {\r\n        historyValue = \"\"\r\n        sampleText = \"\"\r\n        wrongWordAmount = 0\r\n        correctWordAmount = 0\r\n\r\n        if (Array.isArray(textArray) && textArray.length > 0) {\r\n            // Initialize sample text\r\n            let textSpanElements = []\r\n\r\n            for (let i = 0; i < textArray.length; i++) {\r\n                sampleText += textArray[i]\r\n                if (i !== textArray.length - 1) {\r\n                    sampleText += '\\n\\n'\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < sampleText.length; i++) {\r\n                if (sampleText[i] === '\\n') {\r\n                    textSpanElements.push(<span\r\n                        key={i}\r\n                    >\r\n                        ⮐\r\n                    </span>)\r\n\r\n                    textSpanElements.push(<br key={\"br\" + i} />)\r\n                } else {\r\n                    textSpanElements.push(<span\r\n                        key={i}\r\n                    >\r\n                        {sampleText[i]}\r\n                    </span>)\r\n                }\r\n            }\r\n\r\n\r\n\r\n            // Initialize text color\r\n            let newTextColor = new Array(textArray.length).fill(0)\r\n            setTextColor(newTextColor)\r\n\r\n            ReactDOM.render([...sampleTextContainerInitialElements, ...textSpanElements], document.querySelector('#webScrapeSampleTextContainer'))\r\n            moveWebScrapeSampleTextIndicator()\r\n            initialized = true;\r\n            ready();\r\n        } else {\r\n            let warningText = <div\r\n                style={{\r\n                    width: \"100%\",\r\n                    textAlign: \"center\"\r\n                }}\r\n\r\n            >{textArray}</div>\r\n\r\n            ReactDOM.render(warningText, document.querySelector('#webScrapeSampleTextContainer'))\r\n            initialized = false;\r\n            unready();\r\n        }\r\n    }\r\n\r\n    function ready() {\r\n        if (initialized) {\r\n            let webScrapeTextArea = document.querySelector('#webScrapeTextArea');\r\n\r\n            // Focus to textarea\r\n            webScrapeTextArea.focus();\r\n            readied = true;\r\n        }\r\n    }\r\n\r\n    function unready() {\r\n        stop();\r\n        readied = false;\r\n    }\r\n\r\n    function start(newCurrentIntervalStartTime) {\r\n        if (readied && !started) {\r\n            currentIntervalStartTime = newCurrentIntervalStartTime;\r\n            loop(newCurrentIntervalStartTime);\r\n\r\n            paused = false;\r\n            started = true;\r\n        }\r\n    }\r\n\r\n    function stop() {\r\n        pause();\r\n        started = false;\r\n    }\r\n\r\n    function loop(currentTime) {\r\n        let currentIntervalTimeUsed = 0\r\n\r\n        if (currentTime - lastInputTime >= wpmTimeOutStopMilliseconds) {\r\n            // If have to pause timeout\r\n            pause()\r\n        } else {\r\n            // If not yet pause timeout\r\n            // Calculate the milliseconds for next timeout\r\n            let newWPMTimeOutMilliseconds;\r\n            let remainder = (currentTime - currentIntervalStartTime) % wpmTimeOutMilliseconds\r\n\r\n            if (remainder < wpmTimeOutMilliseconds / 2) {\r\n                newWPMTimeOutMilliseconds = wpmTimeOutMilliseconds - remainder\r\n            } else {\r\n                newWPMTimeOutMilliseconds = wpmTimeOutMilliseconds + wpmTimeOutMilliseconds - remainder\r\n            }\r\n\r\n            // Set timeout for next loop\r\n            setTimeout(() => {\r\n                loop(Date.now())\r\n            }, newWPMTimeOutMilliseconds);\r\n\r\n            // Calculate currentIntervalTimeUsed\r\n            currentIntervalTimeUsed = currentTime - currentIntervalStartTime;\r\n        }\r\n\r\n        // Calculate total time used\r\n        let totalTimeUsed = previousTimeUsed + currentIntervalTimeUsed;\r\n        if (totalTimeUsed === 0) {\r\n            setDisplayWPM('- -')\r\n        } else {\r\n            // Calculate wpm\r\n            let wpm = Math.round(((correctWordAmount + wrongWordAmount) / totalTimeUsed) * 10 * 60000) / 10\r\n            setDisplayWPM(wpm)\r\n        }\r\n    }\r\n\r\n    function pause() {\r\n        if (currentTimeOut !== null) {\r\n            clearTimeout(currentTimeOut)\r\n            currentTimeOut = null;\r\n        }\r\n\r\n        if (!paused) {\r\n            previousTimeUsed += lastInputTime - currentIntervalStartTime;\r\n        }\r\n        paused = true;\r\n    }\r\n\r\n    function textAreaOnInput(e) {\r\n        lastInputTime = Date.now()\r\n\r\n        // Start if not yet started\r\n        if (!started) {\r\n            start(lastInputTime)\r\n        }\r\n\r\n        // Calculate amount of correct and wrong word\r\n        let firstDifferentPosition = null;\r\n        let currentValue = e.target.value\r\n        let changeColor = [];\r\n\r\n        // Find the position where the first different occur between history value and current value\r\n        // Check based on current value and look for history value\r\n        for (let i = 0; i < currentValue.length; i++) {\r\n            // If i position is the length of history value, set firstDifferentPosition to be i\r\n            if (i === historyValue.length) {\r\n                firstDifferentPosition = i\r\n                break\r\n            }\r\n\r\n            // If i position of current value is not equal to history value, set firstDifferentPosition to be i\r\n            if (currentValue[i] !== historyValue[i]) {\r\n                firstDifferentPosition = i\r\n                break\r\n            }\r\n        }\r\n\r\n        // If all current value is same as history value, and length of history value is longer than current value, set firstDifferentPosition to be length of current value\r\n        if (firstDifferentPosition === null && historyValue.length > currentValue.length) {\r\n            firstDifferentPosition = currentValue.length;\r\n        }\r\n\r\n        // For all position that history value have but current value don't have, set the color to be origin\r\n        for (let i = currentValue.length; i < historyValue.length; i++) {\r\n            changeColor.push({\r\n                position: i,\r\n                color: 'origin'\r\n            })\r\n        }\r\n\r\n        if (firstDifferentPosition !== null) {\r\n            // Delete\r\n            // Find the position for start counting amount of words to be deleted\r\n            let startDeletePosition = 0\r\n            for (let i = firstDifferentPosition - 1; i >= 0; i--) {\r\n                if (historyValue[i].match(/[^\\w]/)) {\r\n                    startDeletePosition = i + 1;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Start counting amount of correct and wrong words to be deleted\r\n            let currentDeleteWordCorrect = true\r\n            let deletingWord = false\r\n\r\n            for (let i = startDeletePosition; i < historyValue.length; i++) {\r\n                if (i < sampleText.length) {\r\n                    // If the counting is still in the range of sample text\r\n                    if (sampleText[i].match(/[\\w]/)) {\r\n                        // If sampleText index i is a word\r\n\r\n                        deletingWord = true\r\n\r\n                        if (historyValue[i] !== sampleText[i]) {\r\n                            currentDeleteWordCorrect = false;\r\n                        }\r\n                    } else {\r\n                        // If sampleText index i is not a word\r\n                        if (deletingWord) {\r\n                            if (currentDeleteWordCorrect) {\r\n                                correctWordAmount--;\r\n                            } else {\r\n                                wrongWordAmount--;\r\n                            }\r\n                        }\r\n\r\n                        deletingWord = false;\r\n                        currentDeleteWordCorrect = true;\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Add\r\n            // Find the position for start counting amount of words to be added\r\n            let startAddPosition = 0\r\n            for (let i = firstDifferentPosition - 1; i >= 0; i--) {\r\n                if (currentValue[i].match(/[^\\w]/)) {\r\n                    startAddPosition = i\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Start counting amount of correct and wrong words to be added\r\n            let currentAddWordCorrect = true\r\n            let addingWord = false\r\n            for (let i = startAddPosition; i < currentValue.length; i++) {\r\n                if (i < sampleText.length) {\r\n                    // If the counting is still in the range of sample text\r\n                    // Change the color of sample text depends on whether it is correct or not\r\n                    changeColor.push({\r\n                        position: i,\r\n                        color: currentValue[i] === sampleText[i] ? 'correct' : 'wrong'\r\n                    })\r\n\r\n                    if (sampleText[i].match(/[\\w]/)) {\r\n                        // If sampleText index i is a word\r\n                        addingWord = true\r\n\r\n                        if (currentValue[i] !== sampleText[i]) {\r\n                            currentAddWordCorrect = false;\r\n                        }\r\n                    } else {\r\n                        // If sampleText index i is not a word\r\n                        if (addingWord) {\r\n                            if (currentAddWordCorrect) {\r\n                                correctWordAmount++;\r\n                            } else {\r\n                                wrongWordAmount++;\r\n                            }\r\n                        }\r\n\r\n                        deletingWord = false;\r\n                        currentAddWordCorrect = true;\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Change sample text color\r\n        for (let i = 0; i < changeColor.length; i++) {\r\n            let spans = document.querySelector('#webScrapeSampleTextContainer').querySelectorAll('span');\r\n\r\n            spans[changeColor[i]['position']].style.color = colors[changeColor[i]['color']];\r\n        }\r\n\r\n\r\n        // Change history value to current value\r\n        historyValue = currentValue;\r\n\r\n        // Change statistics\r\n        setDisplayWords(correctWordAmount + wrongWordAmount);\r\n\r\n        // Move sample text indicator\r\n        moveWebScrapeSampleTextIndicator()\r\n    }\r\n\r\n    function textAreaOnBlur() {\r\n        pause();\r\n    }\r\n\r\n    function textContainerOnClick() {\r\n        ready()\r\n    }\r\n\r\n    function moveWebScrapeSampleTextIndicator() {\r\n        if (initialized) {\r\n            let webScrapeTextIndicator = document.querySelector('#webScrapeSampleTextIndicator');\r\n            let webScrapeTextArea = document.querySelector('#webScrapeTextArea');\r\n\r\n            let spanElements = document.querySelector('#webScrapeSampleTextContainer').querySelectorAll('span')\r\n\r\n            if (spanElements.length >= webScrapeTextArea.value.length) {\r\n                let nextInputTextElement = spanElements[webScrapeTextArea.value.length]\r\n\r\n                webScrapeTextIndicator.style.height = `${nextInputTextElement.offsetHeight}px`\r\n                webScrapeTextIndicator.style.width = `${nextInputTextElement.offsetWidth}px`\r\n                webScrapeTextIndicator.style.top = `${nextInputTextElement.offsetTop}px`\r\n                webScrapeTextIndicator.style.left = `${nextInputTextElement.offsetLeft}px`\r\n\r\n                webScrapeTextIndicator.classList.add('showTextIndicator')\r\n                webScrapeTextIndicator.classList.remove('hideTextIndicator')\r\n            } else {\r\n                webScrapeTextIndicator.classList.remove('showTextIndicator')\r\n                webScrapeTextIndicator.classList.add('hideTextIndicator')\r\n            }\r\n        }\r\n    }\r\n\r\n    return (<div\r\n        style={{\r\n            whiteSpace: \"pre-wrap\"\r\n        }}\r\n    >\r\n        <Row className=\"justify-content-center text-center\">\r\n            <Col></Col>\r\n            <Col lg={6}>\r\n                <Row>\r\n                    <Col xs={6}>\r\n                        <h6 className=\"th\">WPM</h6>\r\n                        <h5>{displayWPM}</h5>\r\n                    </Col>\r\n                    <Col xs={6}>\r\n                        <h6 className=\"th\">Words</h6>\r\n                        <h5>{displayWords}</h5>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col></Col>\r\n        </Row>\r\n        <textarea\r\n            id=\"webScrapeTextArea\"\r\n            style={{\r\n                position: \"fixed\",\r\n                top: \"0\",\r\n                left: \"0\",\r\n                zIndex: \"-1\",\r\n            }}\r\n            onInput={textAreaOnInput}\r\n            onBlur={textAreaOnBlur}\r\n        ></textarea>\r\n        <div\r\n            id=\"webScrapeSampleTextContainer\"\r\n            style={{\r\n                position: \"relative\",\r\n                borderRadius: \"3px\"\r\n            }}\r\n        >\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default Body","import { useState } from 'react';\r\nimport Head from './Head';\r\nimport Body from './Body';\r\n\r\nfunction WebScrape() {\r\n    const [textArray, setTextArray] = useState('Please enter the URL');\r\n\r\n    return (<div id=\"webScrape\">\r\n        <Head\r\n            textArray={textArray}\r\n            setTextArray={setTextArray}\r\n        />\r\n        <Body\r\n            textArray={textArray}\r\n            setTextArray={setTextArray}\r\n        />\r\n    </div>)\r\n}\r\n\r\n\r\n\r\nexport default WebScrape","import React from 'react';\r\n\r\nfunction Home() {\r\n    return (<div style={{height: \"1000px\"}}><h1>Very long Home</h1></div>)\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect } from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { Gear } from 'react-bootstrap-icons';\r\nimport './Header.css';\r\n\r\nlet collapsed;\r\nlet mobileLayout;\r\n\r\n\r\nconst Header = (props) => {\r\n    console.log('Header rendered')\r\n\r\n    const [originColor, setOriginColor] = useState(true);\r\n    const [displayMobileLayout, setDisplayMobileLayout] = useState(false);\r\n\r\n    const { changeScrollBarColorByScroll, showSetting, setShowSetting, currentTab, setCurrentTab, setting, setSetting } = props;\r\n\r\n    useEffect(() => {\r\n        console.log('Header used effect')\r\n        collapsed = true;\r\n        mobileLayout = false;\r\n\r\n        if (window.innerWidth < 992) {\r\n            mobileLayout = true\r\n            setDisplayMobileLayout(true);\r\n        }\r\n\r\n        changeHeaderBackgroundWithoutUsingHambergar()\r\n\r\n        document.addEventListener('mousedown', closeHeader)\r\n        document.addEventListener('touchstart', closeHeader)\r\n\r\n        window.addEventListener('scroll', () => {\r\n            changeHeaderBackgroundWithoutUsingHambergar()\r\n        });\r\n\r\n        window.addEventListener('resize', () => {\r\n            if (window.innerWidth < 992 && !mobileLayout) {\r\n                mobileLayout = true\r\n                setDisplayMobileLayout(true);\r\n                changeHeaderBackgroundWithoutUsingHambergar()\r\n            } else if (window.innerWidth >= 992 && mobileLayout) {\r\n                if (window.scrollY <= 0) {\r\n                    setOriginColor(true)\r\n                }\r\n                mobileLayout = false\r\n                setDisplayMobileLayout(false);\r\n            }\r\n        })\r\n    }, [])\r\n\r\n\r\n    function toggleCollapseButtonOnClick(currentTabNumber) {\r\n        if (window.scrollY <= 0 && !collapsed) {\r\n            setOriginColor(true)\r\n        } else {\r\n            setOriginColor(false)\r\n        }\r\n\r\n        collapsed = !collapsed\r\n    }\r\n\r\n\r\n    function changeHeaderBackgroundWithoutUsingHambergar() {\r\n        if (window.scrollY <= 0 && collapsed) {\r\n            setOriginColor(true)\r\n        } else {\r\n            setOriginColor(false)\r\n        }\r\n    }\r\n\r\n    function closeHeader(e) {\r\n        if (!e.target.classList.contains('headermain') && !document.querySelector('.headermain').contains(e.target) && !collapsed && mobileLayout) {\r\n            document.querySelector('#toggleCollapseButton').click()\r\n        }\r\n    }\r\n\r\n    function changeTab(e, n) {\r\n\r\n        if (!collapsed && mobileLayout) {\r\n            document.querySelector('#toggleCollapseButton').click()\r\n        }\r\n        console.log(e.target.innerText)\r\n\r\n        if (e.target.innerText == \"Setting\") {\r\n            setShowSetting(!showSetting)\r\n        } else {\r\n            setCurrentTab(n + 1)\r\n        }\r\n        changeScrollBarColorByScroll();\r\n    }\r\n    return (\r\n        <div style={{ height: \"70px\" }}>\r\n            <Navbar\r\n                className={\"headermain\" + (originColor ? \"\" : \" navbar-dark bg-dark\")}\r\n                id=\"navbar\"\r\n                fixed=\"top\"\r\n                collapseOnSelect\r\n                expand=\"lg\"\r\n                style={{ zIndex: 1, padding: `0 0 ${mobileLayout ? \"5px\" : \"2px\"} 0`, }}>\r\n                <Nav\r\n                    style={{ width: \"100%\" }}>\r\n                    <Row\r\n                        className=\"justify-content-lg-between  \"\r\n                        style={{ width: \"100%\", margin: \"0\" }}>\r\n                        <Col\r\n                            xs={12}\r\n                            lg={2}\r\n                            style={{ marginBottom: mobileLayout ? \"10px\" : \"0\", paddingTop: mobileLayout ? \"10px\" : \"0\" }}>\r\n                            <div\r\n                                className=\"d-flex justify-content-between\">\r\n                                <Navbar.Brand\r\n                                    style={{\r\n                                        cursor: \"pointer\"\r\n                                    }}\r\n                                    onClick={() => changeTab(null, -1)}> Home</Navbar.Brand>\r\n                                <Navbar.Toggle\r\n                                    id=\"toggleCollapseButton\"\r\n                                    onClick={() => toggleCollapseButtonOnClick(currentTab)}\r\n                                    aria-controls=\"responsive-navbar-nav\" />\r\n                            </div>\r\n                        </Col>\r\n                        <Col\r\n                            xs={12}\r\n                            lg={8}>\r\n                            <div\r\n                                className=\"d-flex flex-column flex-lg-row justify-content-center\"\r\n                                style={{ width: \"100%\" }}>\r\n                                <Tabs\r\n                                    style={{ ...(displayMobileLayout && { display: \"none\" }) }}\r\n                                    classes={{\r\n                                        indicator: (originColor ? \"indicatorOrigin\" : \"indicatorNonOrigin\")\r\n                                    }}\r\n                                    value={currentTab > 0 && currentTab - 1}\r\n                                    onChange={changeTab}\r\n                                    variant=\"scrollable\"\r\n                                    scrollButtons=\"auto\">\r\n                                    {['About', 'English Typing', 'Number Typing', 'Code Typing', 'Web Scrap Typing', 'No Quote'].map((string, i) => {\r\n                                        return (\r\n                                            <Tab\r\n                                                key={i}\r\n                                                style={{\r\n                                                    color: (() => {\r\n\r\n                                                        if (originColor) {\r\n                                                            return \"#000000\"\r\n                                                        } else {\r\n                                                            return \"#ffffff\"\r\n                                                        }\r\n\r\n                                                    })(),\r\n                                                    textTransform: \"none\"\r\n                                                }}\r\n                                                classes={{\r\n                                                    root: (displayMobileLayout && \"tabButtonNonOrigin\"),\r\n                                                    wrapper: (displayMobileLayout && \"tabLabelNonOrigin\")\r\n                                                }}\r\n                                                label={string}\r\n                                            />)\r\n                                    })}\r\n                                </Tabs>\r\n                            </div>\r\n\r\n                            <Navbar.Collapse\r\n                                id=\"responsive-navbar-nav\">\r\n                                <Tabs\r\n                                    orientation=\"vertical\"\r\n                                    style={{ width: \"100%\", ...(!displayMobileLayout && { display: \"none\" }) }}\r\n                                    classes={{\r\n                                        indicator: (originColor ? \"indicatorOrigin\" : \"indicatorNonOrigin\")\r\n                                    }}\r\n                                    value={currentTab > 0 && currentTab - 1}\r\n                                    onChange={changeTab}\r\n                                    variant=\"scrollable\"\r\n                                    scrollButtons=\"auto\">\r\n                                    {['About', 'English Typing', 'Number Typing', 'Code Typing', 'Web Scrap Typing', 'No Quote', 'Setting'].map((string, i) => {\r\n                                        return (\r\n                                            <Tab\r\n                                                key={i}\r\n                                                style={{\r\n                                                    color: (() => {\r\n                                                        if (originColor) {\r\n                                                            return \"#00000000\"\r\n                                                        } else {\r\n                                                            return \"#ffffff\"\r\n                                                        }\r\n                                                    })(),\r\n                                                    textTransform: \"none\"\r\n                                                }}\r\n                                                classes={{\r\n                                                    root: (displayMobileLayout && \"tabButtonNonOrigin\"),\r\n                                                    wrapper: (displayMobileLayout && \"tabLabelNonOrigin\")\r\n                                                }}\r\n                                                label={string}\r\n                                            />)\r\n                                    })}\r\n                                </Tabs>\r\n                            </Navbar.Collapse>\r\n                        </Col>\r\n                        <Col xs={0} lg={2} className=\"d-flex align-items-center justify-content-end\">\r\n                            {/* Show only when is not mobile layout */}\r\n                            {displayMobileLayout ? null : <Gear style={{ cursor: \"pointer\" }} onClick={() => {\r\n                                setShowSetting(!showSetting)\r\n                            }} />}\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Nav>\r\n            </Navbar>\r\n        </div >)\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nfunction Footer() {\r\n    console.log('render footer')\r\n    return (<div id=\"footer\" className=\"bg-dark\" style={{height: \"500px\", width: \"100%\", marginTop: \"auto\", color: \"#ffffff\"}}>\r\n        <h1>Footer</h1>\r\n        </div>)\r\n}\r\n\r\nexport default Footer;","import { useEffect, useState } from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport './Setting.css';\r\n\r\nlet originSetting = {}\r\n\r\nfunction Setting(props) {\r\n    console.log('rendered setting')\r\n    const { showSetting, setShowSetting, setting, setSetting } = props\r\n    const [currentSettingTab, setCurrentSettingTab] = useState(0)\r\n\r\n    let settingNames = [\r\n        'aboutSetting', \r\n        'quoteSetting',\r\n        'numberTypingSetting',\r\n        'codeSetting',\r\n        'webScrapSetting',\r\n        'noQuoteSetting', \r\n    ]\r\n\r\n    useEffect(async () => {\r\n        console.log('setting used effect')\r\n        let currentSetting = {}\r\n        await Promise.all([\r\n            import('../Ａｂｏｕｔ/About'),\r\n            import('../Ｑｕｏｔｅ/Quote'),\r\n            import('../Ｎｕｍｂｅｒ/Number typing'),\r\n            import('../Ｃｏｄｅ/Code'),\r\n            import('../Ｗｅｂ Ｓｃｒａｐｅ/WebScrape'),\r\n            import('../Ｎｏ　Ｑｕｏｔｅ/NoQuote'),\r\n        ])\r\n            .then(array => {\r\n                array.forEach((obj, i) => {\r\n                    let settingName = settingNames[i]\r\n\r\n                    // Set current setting to be initial setting\r\n                    if (typeof obj['setting'] === 'object') {\r\n                        currentSetting[settingName] = obj['setting']\r\n                        originSetting[settingName] = obj['setting']\r\n                    } else {\r\n                        currentSetting[settingName] = {}\r\n                        originSetting[settingName] = {}\r\n                    }\r\n\r\n                    // Get stored setting in browser\r\n                    let storedSetting = window.localStorage.getItem(settingName) ?? \"{}\"\r\n                    storedSetting = JSON.parse(storedSetting)\r\n                    let newStoredSetting = {}\r\n\r\n                    // Check if type of stored setting valid\r\n                    if (typeof storedSetting === 'object') {\r\n                        for (const property in storedSetting) {\r\n                            if (Object.keys(currentSetting[settingName]).includes(property)) {\r\n                                currentSetting[settingName][property] = storedSetting[property]\r\n                                newStoredSetting[property] = storedSetting[property]\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Store new setting\r\n                    if (newStoredSetting.keys !== undefined) {\r\n                        window.localStorage.setItem(settingName, JSON.stringify(newStoredSetting))\r\n                    }\r\n                })\r\n            });\r\n\r\n        setSetting(currentSetting)\r\n    }, [])\r\n\r\n    function settingBackgroundOnClick(e) {\r\n        if (e.target.id == \"settingBackground\") {\r\n            setShowSetting(false)\r\n        }\r\n    }\r\n\r\n    function closeButtonOnClick() {\r\n        setShowSetting(false)\r\n    }\r\n\r\n    function changeTab(e, n) {\r\n        setCurrentSettingTab(n)\r\n    }\r\n\r\n    function setSettingOnClick(e) {\r\n        let parent = e.target.parentElement.parentElement;\r\n        let settingName = parent.parentElement.getAttribute('settingname')\r\n        let propertyName = parent.getAttribute('propertyname')\r\n        let newSetting = JSON.parse(JSON.stringify(setting))\r\n\r\n        let newValue = parent.childNodes[2].childNodes[0].value\r\n        newSetting[settingName][propertyName] = newValue\r\n        setSetting(newSetting)\r\n\r\n        // Store setting\r\n        let storedSetting = window.localStorage.getItem(settingName) ?? \"{}\"\r\n        storedSetting = JSON.parse(storedSetting)\r\n        storedSetting[propertyName] = newValue\r\n        window.localStorage.setItem(settingName, JSON.stringify(storedSetting))\r\n    }\r\n\r\n    function tableRow(propertyName, currentValue, key) {\r\n        return (<Row key={key} propertyname={propertyName}>\r\n            <Col>{propertyName}</Col>\r\n            <Col>{currentValue}</Col>\r\n            <Col><input /></Col>\r\n            <Col><button onClick={setSettingOnClick}>Set</button></Col>\r\n        </Row>)\r\n    }\r\n\r\n    return (<div\r\n        id=\"settingBackground\"\r\n        className={showSetting ? \"settingBackgroundShow\" : \"settingBackgroundNonShow\"}\r\n        onClick={settingBackgroundOnClick}>\r\n\r\n        <button style={{ ...(!showSetting && { display: \"none\" }) }} id=\"closeButton\" onClick={closeButtonOnClick}>Close</button>\r\n        <div id=\"setting\" className={showSetting ? \"settingShow\" : \"settingNonShow\"}>\r\n\r\n\r\n            <div className=\"d-flex justify-content-center\">\r\n                <Tabs\r\n                    value={currentSettingTab}\r\n                    onChange={changeTab}>\r\n                    {Object.keys(setting).map((e, i) => {\r\n                        return (<Tab\r\n                            key={i}\r\n                            label={e}>\r\n                        </Tab>)\r\n                    })}\r\n                </Tabs>\r\n            </div>\r\n            {Object.entries(setting).map((settingEntry, i) => {\r\n                let settingName = settingEntry[0]\r\n                let settingObj = settingEntry[1]\r\n\r\n                let tableBody = Object.entries(settingObj).map((propertyEntry, i) => {\r\n                    let propertyName = propertyEntry[0]\r\n                    let propertyValue = propertyEntry[1]\r\n\r\n                    return (tableRow(propertyName, propertyValue, i))\r\n                })\r\n\r\n                if (tableBody.length === 0) {\r\n                    tableBody = <h1>No Setting</h1>\r\n                }\r\n\r\n                return (<div\r\n                    className=\"d-flex justify-content-center\"\r\n                    key={i}\r\n                >\r\n                    {currentSettingTab === i &&\r\n                        <div settingname={settingName} style={{ width: \"100%\" }}>\r\n                            <Row>\r\n                                <Col>Value</Col>\r\n                                <Col>Current value</Col>\r\n                                <Col>New value</Col>\r\n                                <Col></Col>\r\n                            </Row>\r\n                            {tableBody}\r\n                        </div>}\r\n                </div>)\r\n\r\n            })}\r\n        </div>\r\n    </div >)\r\n}\r\n\r\nexport default Setting","import './App.css';\r\nimport { useEffect, useState } from 'react';\r\nimport React from 'react';\r\nimport M from 'materialize-css'\r\nimport 'materialize-css';\r\nimport Home from './components/Home/Home';\r\nimport About from './components/Ａｂｏｕｔ/About';\r\nimport NoQuote from './components/Ｎｏ　Ｑｕｏｔｅ/NoQuote';\r\nimport WebScrape from './components/Ｗｅｂ Ｓｃｒａｐｅ/WebScrape';\r\nimport Quote from './components/Ｑｕｏｔｅ/Quote'\r\nimport Code from './components/Ｃｏｄｅ/Code'\r\nimport Header from './components/Header/Header';\r\nimport Footer from './components/Footer/Footer';\r\nimport Setting from './components/Setting/Setting'\r\nimport NumberTypingDisplaySampleText from './components/Ｎｕｍｂｅｒ/Number typing';\r\n\r\nfunction App() {\r\n  console.log('rendered App')\r\n  let components = [\r\n    <Home />,\r\n    <About />,\r\n    <Quote />,\r\n    <NumberTypingDisplaySampleText />,\r\n    <Code />,\r\n    <WebScrape />,\r\n    <NoQuote />,\r\n  ]\r\n\r\n  const [showSetting, setShowSetting] = useState(false)\r\n  const [currentTab, setCurrentTab] = useState(0)\r\n  const [setting, setSetting] = useState({})\r\n\r\n  window.addEventListener('scroll', changeScrollBarColorByScroll)\r\n\r\n  useEffect(() => {\r\n    console.log('App used effect')\r\n    changeScrollBarColorByScroll()\r\n    M.Tabs.init(document.querySelector('.tabs'));\r\n  }, [])\r\n\r\n  function changeScrollBarColorByScroll() {\r\n    let scrollHeight = document.documentElement.scrollHeight;\r\n    let clientHeight = document.documentElement.clientHeight;\r\n    let scrollY = window.scrollY;\r\n    let footerHeight = document.querySelector('#footer').scrollHeight;\r\n\r\n    if ((scrollHeight * (scrollHeight - footerHeight - scrollY) > (clientHeight / 2 + scrollY) * clientHeight) || scrollY < 0) {\r\n      document.querySelector('body').classList.remove('bg-dark')\r\n    } else {\r\n      document.querySelector('body').classList.add('bg-dark')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"app\">\r\n      <Header\r\n        changeScrollBarColorByScroll={changeScrollBarColorByScroll}\r\n        showSetting={showSetting}\r\n        setShowSetting={setShowSetting}\r\n        currentTab={currentTab}\r\n        setCurrentTab={setCurrentTab} \r\n        setting={setting}\r\n        setSetting={setSetting}\r\n        />\r\n      <div id=\"pagesContainer\" className=\"container\">\r\n        {components.map((element, i) => {\r\n          return (<div\r\n            key={i}\r\n          >\r\n            {currentTab === i && React.cloneElement(element, {\r\n              settings: setting,\r\n              setSettings: setSetting\r\n            })}\r\n          </div>)\r\n        })}\r\n      </div>\r\n      <Footer />\r\n\r\n      <Setting\r\n        showSetting={showSetting}\r\n        setShowSetting={setShowSetting}\r\n        setting={setting}\r\n        setSetting={setSetting}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import \"materialize-css/dist/css/materialize.min.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}